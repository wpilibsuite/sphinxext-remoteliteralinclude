name: CI
on:
  pull_request:
    branches:
      - main
  push:
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Black
      run: |
        pip install black
        black --check --exclude /docs --diff .
  test-extension:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13', 'pypy3.10']
        sphinx-version: ['5.*', '6.*', '7.*', '8.*']
        exclude:
          - python-version: '3.8'
            sphinx-version: '8.*'
          - python-version: '3.9'
            sphinx-version: '8.*'
          - python-version: '3.13'
            sphinx-version: '5.*'
    name: "Test Extension - Python(${{ matrix.python-version }}), Sphinx(${{ matrix.sphinx-version }})"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r dev-requirements.txt
          python -m pip install sphinx==${{ matrix.sphinx-version }}
      - name: Run Tests for ${{ matrix.python-version }}
        run: |
          python -m pytest -vv
  pypi-release:
    needs: test-extension
    runs-on: ubuntu-latest
    if: contains(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./dev-requirements.txt
      - name: Build PyPI Wheel
        run: |
          python setup.py sdist
          python setup.py bdist_wheel
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
